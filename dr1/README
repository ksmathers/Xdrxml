Prerequisites:

   libxml2
   ======= 

   Get and install libxml2 from http://www.xmlsoft.org.  This library
   is a very good, fast, and small C implementation of DOM, XPath,
   and XPointer.
   
   The 'libhistory' and 'libreadline' libraries are also used by libxml,
   but will probably already be on your system.  Redhat 7 includes more
   recent versions of these two libraries than the RPMs on ftp.gnome.org,
   so if you are using Redhat 7 you'll probably be best off compiling 
   'libxml2' from source.

   sdl
   ===

   Get and install the SDL graphics gaming library from www.libsdl.org.
   With Redhat 7, I just installed the SDL and SDL_devel RPMs for version
   1.2.0 of the library.  The code isn't backward compatible with 1.1 so
   you will have to get 1.2 from the network.

   SDL_ttf
   =======

   Truetype font library for SDL.  To use this with the latest version
   of freetype you will need to get at least version 2.0.2.
   
   You can find this library at:
       http://www.libsdl.org/cvs/ 

   freetype
   ========

   SDL_ttf 2.0.2 and later support Freetype 2, which has the benefit of
   being maintained, and having fewer bugs, but most importantly can be
   compiled without the hinting interpreter in case Apple gets bent over
   their truetype patents.  Autohinting sometimes even looks better than
   the code hinting.

   Get the sources from www.freetype.org.

To Build:

    dr1server
    =========

    $ make depend && make

    The result is the program 'dr1server' which is the server side of 
    Dragon's Reach

To Run:

    Run the dr1server from the shell prompt.  For a client you can 
    connect to localhost port 2300:

    server
    ======

    $ dr1server
    3: Server ready...

    client
    ======

    $ telnet localhost 2300
    Login:

    The server saves player data to files with names like 
    'login-password.xml' in the current directory.

    sdlclient
    =========

    The custom client test code is in the sdlclient subdirectory.
    Feel free to try it out, but it isn't yet connected to the 
    server.  The commands are currently like 'vi':
        h - left
	j - down
	k - up
	l - right
	o - open doors
        s - get a screenshot

    $ cd gfx/24x35
    $ make
    $ cd -
    $ cd sdlclient
    $ make

    mapedit
    =======

    The map editor is almost the same code as the sdlclient right 
    now.  In addition to the sdlclient commands mapedit supports:
        r - replace tile (followed by the two character code for the
	     new tile)
	w - write map out to disk
   
    The map editor also lets you walk through walls, off the edge of
    the map, etc.  (Don't try to replace tiles off the edge of the 
    map though; the editor will core dump.)
